0 Какие типы полиморфизма существуют в ООП?
1 Полиморфизм подтипов
1 Параметрический полиморфизм
1 Полиморфизм перегрузки закрытых членов класса
1 Полиморфизм времени компиляции
2 0

0 Что означает полиморфизм времени выполнения (runtime polymorphism)?
1 Выбор нужной функции для выполнения во время компиляции
1 Выбор нужной функции для выполнения во время выполнения программы
1 Использование одного имени для нескольких функций с разными параметрами
1 Использование наследования для создания новых классов
2 1

0 Какие преимущества обеспечивает полиморфизм в программировании?
1 Уменьшение зависимостей между компонентами программы
1 Увеличение гибкости программы и возможность повторного использования кода
1 Ускорение выполнения программы за счет оптимизации компилятора
1 Уменьшение количества ошибок в программе
2 01

0 Что представляет собой полиморфизм подтипов?
1 Возможность использования объектов разных классов как объектов одного базового класса
1 Возможность создания методов с одинаковыми именами, но разными параметрами
1 Возможность изменять тип возвращаемого значения метода
1 Возможность вызывать методы из разных классов с одним и тем же именем
2 0

0 Что такое статическое связывание (static binding) в контексте полиморфизма?
1 Процесс выбора нужной функции для выполнения во время компиляции
1 Процесс выбора нужного метода для выполнения во время выполнения программы
1 Процесс создания новых экземпляров классов на основе других классов
1 Процесс передачи свойств и методов от объекта к объекту
2 0

0 Что означает множественное наследование в контексте полиморфизма?
1 Возможность класса наследовать свойства и методы только от одного базового класса
1 Возможность класса наследовать свойства и методы от нескольких базовых классов
1 Невозможность использования наследия в ООП
1 Возможность создания экземпляров класса без наследия от других классов
2 1

0 Что представляет абстрактный класс в контексте полиморфизма?
1 Класс, который может создать экземпляр напрямую без наследования от других классов
1 Класс, который содержит хотя бы один абстрактный метод и не может быть инстанциирован
1 Класс, который содержит только статические методы и свойства
1 Класс, который не может быть использован в программе из-за ограничений языка программирования
2 1

0 Что означает "ковариантность" в контексте полиморфизма?
1 Перенос наследования исходных типов на производные от них типы в прямом порядке
1 Возвращаемый тип производного класса должен быть супертипом возвращаемого типа базового класса
1 Методы производного класса должны иметь более широкий доступ чем у базового класса
1 Методы производного класса должны иметь более узкий доступ чем у базового класса
2 0

0 Что представляют собой "виртуальные методы" в контексте полиморфизма?
1 Методы, которые можно вызвать только через статический вызов
1 Методы, которые можно переопределить в производном классе
1 Методы, которые не могут быть изменены после объявления
1 Методы, которые доступны только внутри того класса, в котором они объявлены
2 1

0 Как можно вызвать базовый метод из переопределенного метода в C#?
1 Используя ключевое слово super
1 Используя ключевое слово base
1 Используя ключевое слово parent
1 Используя ключевое слово this
2 1

0 В каком порядке вызываются статический конструктор и обычный конструктор в C#?
1 Сначала вызывается статический конструктор, затем обычный конструктор
1 Сначала вызывается обычный конструктор, затем статический конструктор
1 Оба конструктора вызываются параллельно
1 Порядок вызова зависит от реализации класса
2 0

0 Что делает ключевое слово virtual при объявлении метода в базовом классе в C#?
1 Позволяет другим классам переопределить этот метод
1 Запрещает переопределение метода в производных классах
1 Делает метод доступным только в базовом классе
1 Устанавливает метод как статический
2 0

0 Какой из приведенных ниже пунктов наиболее точно соответствует следующему поведению: имеется базовый класс "Shape" с методом "CalculateSquare()", а также производных классы "Circle" и "Rectangle", которые по-своему определили данный метод?
1 Перегрузка методов
1 Наследование
1 Переопределение методов
1 Инкапсуляция
2 2

0 Каким уровнем доступа по умолчанию обладают методы и свойства, определенные внутри  интерфейса?
1 public
1 private
1 protected
1 sealed
2 0

0 Что означают модификаторы доступа?
1 Ключевые слова, устанавливающие доступность классов, методов и других членов
1 Ключевые слова, определяющие тип возвращаемых значений методов
1 Ключевые слова, позволяющие переопределять методы функции, унаследованных от базовых классов
2 0